from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandStart
from our_words import words

router = Router()



@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç, —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª—ç–Ω–≥–æ–≤—ã—Ö —Å–ª–æ–≤? –Ø —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–≥—É —Ç–µ–±–µ. –ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–æ —Å–ª–æ–≤–æ "—Å–∫—É—Ñ" –≤ –º–æ–µ–º –Ω–∞–∑–≤–∞–Ω–∏–∏? –ù–∞–ø–∏—à–∏ –º–Ω–µ –µ–≥–æ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ. –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–µ–Ω –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —è –∑–Ω–∞—é, –Ω–∞–ø–∏—à–∏ /all_words')


@router.message(F.text[0] != '/')
async def resque_word(message: Message):
    request_word=message.text.lower()
    ans_was=0
    maybe_words=''
    for stroka in words:
        if request_word==stroka[0]:
            await message.answer(stroka[1])
            ans_was=1
            
    if ans_was == 0:
        for stroka in words:
            if all(char in stroka[0] for char in request_word ) and len(request_word)>=2 :
                maybe_words+=stroka[0]+', '
        
        if len(maybe_words)>0:
            await message.answer('–í–æ–∑–º–æ–∂–Ω–æ —Ç—ã –∏–º–µ–ª –≤ –≤–∏–¥—É —á—Ç–æ-—Ç–æ –∏–∑ —ç—Ç–æ–≥–æ? (–ï—Å–ª–∏ –Ω–µ –Ω–∞—à–µ–ª —Å–≤–æ–µ —Å–ª–æ–≤–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–π —Å—é–¥–∞ @megumiwaa –∏ —è –µ–≥–æ —Ä–∞—Å—Å–º–æ—Ç—Ä—é.)')
            await message.answer(maybe_words[:-2])
        else:
            await message.answer('–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞ üò≠. –ï—Å–ª–∏ —Ç—ã —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –æ—Ç–ø—Ä–∞–≤–ª—è–π —Å—é–¥–∞ @megumiwaa –∏ —è –µ–≥–æ —Ä–∞—Å—Å–º–æ—Ç—Ä—é.')
    
    

            
@router.message(F.text == '/all_words')
async def resque_word(message: Message):
    all_words=""
    for stroka in words:
        all_words=all_words+stroka[0]+", "
    await message.answer(all_words[0:-2])
        